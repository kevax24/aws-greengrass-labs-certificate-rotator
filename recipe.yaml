---
RecipeFormatVersion: '2020-01-25'
ComponentName: com.doka.CertificateRotator
ComponentVersion: 0.0.1
ComponentDescription: Certificate Rotator
ComponentPublisher: Amazon
ComponentConfiguration:
  DefaultConfiguration:
    accessControl:
      aws.greengrass.ipc.mqttproxy:
        com.doka.CertificateRotator:mqttproxy:1:
          policyDescription: Allows access to publish to relevant topics
          operations:
          - "aws.greengrass#PublishToIoTCore"
          resources:
          - "$aws/things/{iot:thingName}/jobs/+/get"
          - "$aws/things/{iot:thingName}/jobs/+/update"
          - "awslabs/things/{iot:thingName}/certificate/create"
          - "awslabs/things/{iot:thingName}/certificate/commit"
        com.doka.CertificateRotator:mqttproxy:2:
          policyDescription: Allows access to subscribe to relevant topics
          operations:
          - "aws.greengrass#SubscribeToIoTCore"
          resources:
          - "$aws/things/{iot:thingName}/jobs/notify-next"
          - "$aws/things/{iot:thingName}/jobs/+/get/accepted"
          - "$aws/things/{iot:thingName}/jobs/+/get/rejected"
          - "$aws/things/{iot:thingName}/jobs/+/update/accepted"
          - "$aws/things/{iot:thingName}/jobs/+/update/rejected"
          - "awslabs/things/{iot:thingName}/certificate/create/accepted"
          - "awslabs/things/{iot:thingName}/certificate/create/rejected"
          - "awslabs/things/{iot:thingName}/certificate/commit/accepted"
          - "awslabs/things/{iot:thingName}/certificate/commit/rejected"
ComponentDependencies:
  aws.greengrass.Nucleus:
    VersionRequirement: '>=2.6.0'
    DependencyType: SOFT
Manifests:
- Platform:
    os: linux
  Lifecycle:
    Install: 
      Timeout: 900
      RequiresPrivilege: true
      Script: |-
        echo Install dependencies
        apt install python3-pip python3-venv -y
        echo Creating virtual environment
        python3 -m venv venv
        echo Activating virtual environment
        . venv/bin/activate
        echo Upgrading pip
        pip install pip --upgrade
        echo Installing package requirements
        pip3 install -r {artifacts:decompressedPath}/com.doka.CertificateRotator/com.doka.CertificateRotator/requirements.txt
    Run:
      RequiresPrivilege: true
      Script: |-
        while true; do
          output=$(sudo -u ggc_user bash -c '~/parsec-tool ping' 2>&1)
          if echo "$output" | grep -q "Service wire protocol version"; then
            echo "Parsec service is ready."
            break
          else
            echo "Waiting for Parsec service to start..."
            sleep 2
          fi
        done

        echo Activating virtual environment
        . venv/bin/activate
        echo Running the component
        python3 -u {artifacts:decompressedPath}/com.doka.CertificateRotator/com.doka.CertificateRotator/main.py
        EC=$?
        echo $EC
        if [ $EC -eq 0 ] ; then
            echo Restarting the Greengrass service ...
            cp {artifacts:decompressedPath}/com.doka.CertificateRotator/com.doka.CertificateRotator/restart_greengrass.sh /root/restart_greengrass.sh
            chmod +x /root/restart_greengrass.sh
            cp {artifacts:decompressedPath}/com.doka.CertificateRotator/com.doka.CertificateRotator/restart_gg.service /etc/systemd/system/restart_gg.service
            systemctl enable restart_gg.service
            systemctl start restart_gg.service
        fi
  Artifacts:
  - Uri: s3://cloudgateway-ktmvdevices-56k/com.doka.CertificateRotator/0.0.1/com.doka.CertificateRotator.zip
    Unarchive: ZIP
    Permission:
      Read: ALL
Lifecycle: {}
